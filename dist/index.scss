/*!
 * name: @jswork/wsui-generators
 * description: Webkit sass generator mixins.
 * homepage: https://github.com/afeiship/wsui-generators
 * version: 2.0.0
 * date: 2020-11-28 17:18:11
 * license: MIT
 */

$wsui-generators-prefix: "" !default;

%space {
  display: block;
  font-size: 0;
  overflow: hidden;
  clear: both;
}

/*background-color Start*/
@mixin generator-background-color($map) {
  $prefix: "." + $wsui-generators-prefix + "bg-";
  @each $key, $color in $map {
    #{$prefix}#{$key} {
      background-color: #{$color};
    }
  }
}
/*background-color End*/

/*border-color Start*/
@mixin generator-border-color($map) {
  $prefix: "." + $wsui-generators-prefix + "bdc-";
  @each $key, $color in $map {
    #{$prefix}#{$key} {
      border-color: #{$color};
    }
  }
}
/*border-color End*/

/*border-radius Start*/
// NORMAL
@mixin generator-border-radius($list, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "bdr-";
  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        border-radius: rem($i, $rem);
      }
    }
  }
}
/*border-radius End*/

/*box Start*/
$boxing-map: (
  m: margin,
  mt: margin-top,
  mr: margin-right,
  mb: margin-bottom,
  ml: margin-left,
  p: padding,
  pt: padding-top,
  pr: padding-right,
  pb: padding-bottom,
  pl: padding-left,
  mx: (
    margin-left,
    margin-right,
  ),
  my: (
    margin-top,
    margin-bottom,
  ),
  px: (
    padding-left,
    padding-right,
  ),
  py: (
    padding-top,
    padding-bottom,
  ),
);

// NORMAL
@mixin generator-box($list, $direction: "m", $rem: px) {
  $map-value: map_get($boxing-map, $direction);
  $prefix: $wsui-generators-prefix + $direction + "-";
  $typeof: type-of($map-value);

  @if $typeof == string {
    .#{$prefix} {
      @each $i in $list {
        &#{$i} {
          &,
          &_ > * {
            #{$map-value}: rem($i, $rem);
          }
        }
      }
    }
  } @else {
    .#{$prefix} {
      @each $i in $list {
        &#{$i} {
          &,
          &_ > * {
            @each $item in $map-value {
              #{$item}: rem($i, $rem);
            }
          }
        }
      }
    }
  }
}
/*box End*/

/*color Start*/
@mixin generator-color($map) {
  $prefix: "." + $wsui-generators-prefix + "c-";
  @each $name, $color in $map {
    #{$prefix}#{$name} {
      color: #{$color};
    }
  }
}
/*color End*/

/*font-size Start*/

// NORMAL
@mixin generator-font-size($inList, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "f-";
  #{$prefix} {
    @each $i in $inList {
      &#{$i} {
        font-size: rem($i, $rem);
      }
    }
  }
}
/*font-size End*/

// fontWeight
@mixin generator-font-weight($list) {
  $prefix: "." + $wsui-generators-prefix + "fw-";
  @each $value in $list {
    #{$prefix}#{$value} {
      font-weight: $value;
    }
  }
}

/*line-clamp Start*/
%line-clamp {
  overflow: hidden;
  text-overflow: ellipsis;
  display: flex;
  display: -webkit-box;
  -webkit-box-orient: vertical;
}

@mixin line-clamp($line) {
  @extend %line-clamp;
  -webkit-line-clamp: $line;
}

@mixin generator-line-clamp($list) {
  $prefix: "." + $wsui-generators-prefix + "lc-";
  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        -webkit-line-clamp: $i;
        @extend %line-clamp;
      }
    }
  }
}

/*line-clamp End*/

/*line-height Start*/
// NORMAL
@mixin generator-line-height($list, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "lh-";
  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        line-height: rem($i, $rem);
      }
    }
  }
}

@mixin generator-hlh($list, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "hlh-";
  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        height: rem($i, $rem);
        line-height: rem($i, $rem);
      }
    }
  }
}
/*line-height End*/

/*line Start*/
@mixin generator-line($list, $color: #ccc, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "l-";
  %line-color {
    background-color: $color;
  }

  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        height: #{$i}px;
        @extend %space;
        @extend %line-color;
      }
    }
  }
}
/*line End*/

/*space Start*/
@mixin generator-space($list, $rem: px) {
  $prefix: "." + $wsui-generators-prefix + "sp-";
  #{$prefix} {
    @each $i in $list {
      &#{$i} {
        height: rem($i, $rem);
        @extend %space;
      }
    }
  }
}
/*space End*/

/*width Start*/
@mixin generator-width-w1($list) {
  $prefix: "." + $wsui-generators-prefix + "w1-";
  @each $value in $list {
    #{$prefix}#{$value} {
      width: percentage(1 / $value);
    }
  }
}

@mixin generator-width-wp($list) {
  $prefix: "." + $wsui-generators-prefix + "wp-";
  @each $value in $list {
    #{$prefix}#{$value} {
      width: percentage($value/10);
    }
  }
}
/*width End*/
